{"pageProps":{"note":{"id":"b235045c-af65-4673-9aca-c29083c8556c","title":"Class Split","desc":"Desribing the concepts and issues around splitting the NDBC Reader into multiple classes","updated":1622504828566,"created":1622482980052,"custom":{},"fname":"projects.ndbc-reader.class-split","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"1ad1b242c8fb8cac9711262758f00e3d","links":[{"type":"ref","from":{"fname":"projects.ndbc-reader.class-split","id":"b235045c-af65-4673-9aca-c29083c8556c","vaultName":"Dendron"},"value":"projects.ndbc-reader.class-split.station-web-manager","position":{"start":{"line":35,"column":1,"offset":2433},"end":{"line":35,"column":69,"offset":2501},"indent":[]},"xvault":false,"to":{"fname":"projects.ndbc-reader.class-split.station-web-manager","anchorHeader":"fetch_data"}}],"anchors":{"stationwebmanager-manages-interactions-with-ndbc-web-servers":{"type":"header","text":"StationWebManager: Manages interactions with NDBC web servers.","value":"stationwebmanager-manages-interactions-with-ndbc-web-servers","line":17,"column":2,"depth":4},"datamanager-handles-data-parsing-storing-saving-and-access":{"type":"header","text":"DataManager: Handles data parsing, storing, saving, and access.","value":"datamanager-handles-data-parsing-storing-saving-and-access","line":24,"column":2,"depth":4},"db2-coordinates-subclass-functionality---eventually-renamed-to-databuoy-class-once-all-tests-pass":{"type":"header","text":"DB2: Coordinates Subclass functionality - eventually renamed to DataBuoy class once all tests pass.","value":"db2-coordinates-subclass-functionality---eventually-renamed-to-databuoy-class-once-all-tests-pass","line":30,"column":2,"depth":4},"outstanding-questions":{"type":"header","text":"Outstanding Questions:","value":"outstanding-questions","line":35,"column":0,"depth":2}},"children":["6a1859bd-62ec-4563-952e-67c3b65a664c"],"parent":"6fc953db-7d86-483d-82c4-40e1675f6d1f","data":{}},"body":"<h1 id=\"class-split\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#class-split\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Class Split</h1>\n<p>The idea to break up the <code>DataBuoy</code> class in the <code>NDBC</code> package came from a desire to separate the concerns and de-couple the functionality relating to</p>\n<ol>\n<li>Handle web requests/responses to and from NDBC servers</li>\n<li>Parse, store, and save station data.</li>\n</ol>\n<p>I imagine that there may be usecases where researchers are only interested in a limited subset of the functionality present in the <code>DataBuoy</code> class.  In that respect <em>I hope</em> this effort will be more useful that just helping me simplify the process of modifying the existing code base.  However, it has caused me to have to rethink the way the core processes of the <code>DataBuoy</code> class due to the way in which NDBC server request functionality is tightly coupled with data parsing and storage.  Let's take a look at the new structure by examing the classes and their functionality</p>\n<ul>\n<li>\n<h4 id=\"stationwebmanager-manages-interactions-with-ndbc-web-servers\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#stationwebmanager-manages-interactions-with-ndbc-web-servers\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a><code>StationWebManager</code>: Manages interactions with NDBC web servers.</h4>\n<ul>\n<li>Stores constants related to web requests (e.g. <code>DATA_PACKAGES</code>, <code>STATION_URL</code>, etc.)</li>\n<li>Creates station URLs for each month/year requested and checks to see whether they exist on the NDBC server.</li>\n<li>Fetches/parses station metadata.</li>\n<li>Performs station search requests</li>\n<li>Fetches specified data packages for time periods requested</li>\n</ul>\n</li>\n<li>\n<h4 id=\"datamanager-handles-data-parsing-storing-saving-and-access\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#datamanager-handles-data-parsing-storing-saving-and-access\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a><code>DataManager</code>: Handles data parsing, storing, saving, and access.</h4>\n<ul>\n<li>Performs data type asignments</li>\n<li>Parses date part columns into Python datetime values</li>\n<li>Checks for NDBC \"bad data\" flags (all digits set to 9) and replaces bad data with NumPy <code>NaN</code> value.</li>\n<li>Saves parsed data to <code>data</code> attribute.</li>\n</ul>\n</li>\n<li>\n<h4 id=\"db2-coordinates-subclass-functionality---eventually-renamed-to-databuoy-class-once-all-tests-pass\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#db2-coordinates-subclass-functionality---eventually-renamed-to-databuoy-class-once-all-tests-pass\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a><code>DB2</code>: Coordinates Subclass functionality - eventually renamed to <code>DataBuoy</code> class once all tests pass.</h4>\n<ul>\n<li>Coordinates the use of <code>StationWebManager</code> request/response methods with <code>DataManager</code> parsing and storage methods behind a simple interface.</li>\n<li>Provide simplified data access using <code>@property</code> decorated functions.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"outstanding-questions\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#outstanding-questions\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Outstanding Questions:</h2>\n<p>The current implementation allows a user to make a request for a data package without specifying months or years.  In this case the function starts at the current month/year and checks for valid data, stepping back one month for reach failed request until either </p>\n<ul>\n<li>A valid monthly summary can be found and returned</li>\n<li>All months in the current and previous year have been queried.</li>\n</ul>\n<p>The revised approach for fetching data (shown below) is designed to make a request for a single time period</p>\n<p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Station Web Manager</span></div>\n<a href=\"/MyNotes/notes/6a1859bd-62ec-4563-952e-67c3b65a664c\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">â†’</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><h4 id=\"fetch_data\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#fetch_data\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a><code>fetch_data()</code></h4>\n<p>I think this is going to be the exposed wrapper function that will encapsulate all the actions that go into making a request to the NDBC server.  Each call to this function will represent a request for a single data package for a distinct time period.  It will either return a Pandas dataframe of the raw data if the data package is available for the station and time period requested <strong>or</strong> it will return a string notifying the calling function that this station/data package/time period combination is not available.  Let's take a look at the steps:</p>\n<ul>\n<li>\n<p>Check if data type requested is in the <code>DATA_PACKAGES</code> dictionary</p>\n<ul>\n<li>Continue if so, raise Exception if not.</li>\n</ul>\n</li>\n<li>\n<p>Create necessary keywords for URL string formatting</p>\n</li>\n<li>\n<p>Choose which set of URL templates to use (month or year) based on <code>kwargs</code> passed in</p>\n</li>\n<li>\n<p>Build URLs based on lists of template strings</p>\n</li>\n<li>\n<p>Check URL validity based on <code>HEAD</code> request response code (<code>200</code> == <code>good</code>)</p>\n<ul>\n<li>If we have a good URL response, fetch data using <code>pandas.read_csv()</code> method and return resulting DataFrame.</li>\n<li>If not, return formatted string message stating the data package and time period do not appear to be available. </li>\n</ul>\n</li>\n</ul>\n</div></div><p></p><p></p>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/MyNotes/notes/6a1859bd-62ec-4563-952e-67c3b65a664c\">Station Web Manager</a></li>\n</ol>","noteIndex":{"id":"0bwos7t08sg0btcv0xz15jj","title":"My Notes","desc":"The personal notes of Ryan Manzer - he puts the Manzer in Supermanzer","updated":1656877804079,"created":1653768544007,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"c60847c1bac11a21d4df34db59344c62","links":[],"anchors":{"welcome-to-my-brain":{"type":"header","text":"Welcome to my brain","value":"welcome-to-my-brain","line":8,"column":0,"depth":2}},"children":["ZMf4aL2sSZBsUMJgMhn0R"],"parent":null,"data":{},"body":"\n## Welcome to my brain\n\nI use this wiki site and [Dendron](https://wiki.dendron.so/) to organize my thoughts about various software projects and ideas.  This tool is primarily to store my own thoughts and allow me to document my development process.  This helps me better organize these projects and plan future development.  \n\nIf others find this site interesting and possibly useful, bonus!"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template","insertNote":{"initialValue":"templates"}},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false,"enableHandlebarTemplates":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteUrl":"https://supermanzer.github.io/MyNotes","assetsPrefix":"/MyNotes","siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"My Notes","description":"Personal Knowledge Space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}