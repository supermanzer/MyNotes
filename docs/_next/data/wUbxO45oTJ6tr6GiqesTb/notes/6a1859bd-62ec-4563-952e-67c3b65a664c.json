{"pageProps":{"note":{"id":"6a1859bd-62ec-4563-952e-67c3b65a664c","title":"Station Web Manager","desc":"","updated":1622487071188,"created":1622485719542,"custom":{},"fname":"projects.ndbc-reader.class-split.station-web-manager","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"7697934f88bed52a841875b5fa0149cd","links":[{"from":{"fname":"projects.ndbc-reader.class-split","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":35,"column":1,"offset":2433},"end":{"line":35,"column":69,"offset":2501},"indent":[]},"value":"projects.ndbc-reader.class-split.station-web-manager"}],"anchors":{"newrevised-functionality":{"type":"header","text":"New/Revised Functionality","value":"newrevised-functionality","line":14,"column":0,"depth":3},"fetch_data":{"type":"header","text":"fetch_data()","value":"fetch_data","line":17,"column":0,"depth":4}},"children":[],"parent":"b235045c-af65-4673-9aca-c29083c8556c","data":{}},"body":"<h1 id=\"station-web-manager\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#station-web-manager\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Station Web Manager</h1>\n<p>The utility functionality for this class was simply copied and pasted from the original <code>DataBuoy</code> class.  These handle actions like</p>\n<ul>\n<li>Create formatted URL strings based on parameters like <code>station_id</code>, <code>month</code>, <code>year</code>, and <code>data_package</code>.</li>\n<li>Make <code>HEAD</code> requests to determine which URL string formats return a valid response.</li>\n<li>All <code>station_search()</code> functionality since it's basically a web request with a lot of arguments.</li>\n</ul>\n<h3 id=\"newrevised-functionality\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#newrevised-functionality\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>New/Revised Functionality</h3>\n<p>Previously I had wrapped the requesting of data and storing inside a larger function that interated over all the distinct time periods requested for a single station and data package.  With the functionality being separated out, I need to think about how to structure these functions to achieve the separation I am looking for while still providing the functionality intended.</p>\n<h4 id=\"fetch_data\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#fetch_data\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a><code>fetch_data()</code></h4>\n<p>I think this is going to be the exposed wrapper function that will encapsulate all the actions that go into making a request to the NDBC server.  Each call to this function will represent a request for a single data package for a distinct time period.  It will either return a Pandas dataframe of the raw data if the data package is available for the station and time period requested <strong>or</strong> it will return a string notifying the calling function that this station/data package/time period combination is not available.  Let's take a look at the steps:</p>\n<ul>\n<li>\n<p>Check if data type requested is in the <code>DATA_PACKAGES</code> dictionary</p>\n<ul>\n<li>Continue if so, raise Exception if not.</li>\n</ul>\n</li>\n<li>\n<p>Create necessary keywords for URL string formatting</p>\n</li>\n<li>\n<p>Choose which set of URL templates to use (month or year) based on <code>kwargs</code> passed in</p>\n</li>\n<li>\n<p>Build URLs based on lists of template strings</p>\n</li>\n<li>\n<p>Check URL validity based on <code>HEAD</code> request response code (<code>200</code> == <code>good</code>)</p>\n<ul>\n<li>If we have a good URL response, fetch data using <code>pandas.read_csv()</code> method and return resulting DataFrame.</li>\n<li>If not, return formatted string message stating the data package and time period do not appear to be available. </li>\n</ul>\n</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/MyNotes/notes/b235045c-af65-4673-9aca-c29083c8556c\">Class Split</a></li>\n</ul>","noteIndex":{"id":"0bwos7t08sg0btcv0xz15jj","title":"My Notes","desc":"The personal notes of Ryan Manzer - he puts the Manzer in Supermanzer","updated":1656877804079,"created":1653768544007,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"c60847c1bac11a21d4df34db59344c62","links":[],"anchors":{"welcome-to-my-brain":{"type":"header","text":"Welcome to my brain","value":"welcome-to-my-brain","line":8,"column":0,"depth":2}},"children":["ZMf4aL2sSZBsUMJgMhn0R"],"parent":null,"data":{},"body":"\n## Welcome to my brain\n\nI use this wiki site and [Dendron](https://wiki.dendron.so/) to organize my thoughts about various software projects and ideas.  This tool is primarily to store my own thoughts and allow me to document my development process.  This helps me better organize these projects and plan future development.  \n\nIf others find this site interesting and possibly useful, bonus!"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template","insertNote":{"initialValue":"templates"}},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false,"enableHandlebarTemplates":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteUrl":"https://supermanzer.github.io/MyNotes","assetsPrefix":"/MyNotes","siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"My Notes","description":"Personal Knowledge Space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}